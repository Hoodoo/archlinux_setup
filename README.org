* Отличная идея --- переустанавливать систему каждую неделю, данные наливать обратно из бэкапов
https://grahamc.com/blog/erase-your-darlings

По идее, достаточно где-то опубликовать этот файл, в инсталлере запускать ~tmux~ и ~emacs~ и накатывать по инструкции. Единственные вещи, которые нужно будет запомнить:

#+begin_src sh
iwctl
station wlan0 scan
station wlan0 connect SSID
#+end_src

** Мусорка
   #+begin_src sh
   mkdir prep
   mkdir mn
   cd prep
   wget https://raw.githubusercontent.com/Hoodoo/archlinux_setup/master/README.org
   emacs README.org
   #+end_src

** Партиции 1

   https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS

   #+begin_quote
   The straightforward method is to set up LVM on top of the encrypted partition instead of the other way round. Technically the LVM is setup inside one big encrypted blockdevice. Hence, the LVM is not transparent until the blockdevice is unlocked and the underlying volume structure is scanned and mounted during boot.

   The disk layout in this example is:
   #+end_quote

   #+begin_example
+-----------------------------------------------------------------------+ +----------------+
| Logical volume 1      | Logical volume 2      | Logical volume 3      | | Boot partition |
|                       |                       |                       | |                |
| [SWAP]                | /                     | /home                 | | /boot          |
|                       |                       |                       | |                |
| /dev/MyVolGroup/swap  | /dev/MyVolGroup/root  | /dev/MyVolGroup/home  | |                |
|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| | (may be on     |
|                                                                       | | other device)  |
|                         LUKS2 encrypted partition                     | |                |
|                           /dev/sda1                                   | | /dev/sdb1      |
+-----------------------------------------------------------------------+ +----------------+
  #+end_example
   
  Соответственно, нужно две партиции, одна под ~/boot~ и одна под ~LUKS~ со всем остальным.

  Переводим в ~GPT~, создаём партиции (секторы взяты, так сказать, эмпирически)

  ~ef00~ это ~efi~ партиция.

  Для второй партиции end sector 0 означает "последний какой только можно"

   #+begin_src 
   sgdisk -g /dev/nvme0n1
   sgdisk -n 1:2048:555007 -t 1:ef00 /dev/nvme0n1
   sgdisk -n 2:555008:0 -t 2:8300 /dev/nvme0n1
   #+end_src

** LUKS


** Партиции 2

** Пакеты

** Чрут

** Время

** Локали

** /etc/hostname

** initramfs

** root

** grub
   
   На этой машине при каждой переналивке будут создаваться логические тома с одинаковыми названиями, ~UUID~ криптоконтейнера может измениться.

   #+begin_src sh
   UUID=`blkid /dev/nvme0n1p2 | grep -ow 'UUID="[a-f0-9\-]*"' | sed 's?"??g'`
   LINUM=`grep -n GRUB_CMDLINE_LINUX= /etc/default/grub | cut -d ":" -f 1`
   HEAD=`head -$((${LINUM} - 1)) /etc/default/grub`
   LENGTH=`wc -l /etc/default/grub | awk '{ print $1 }'`
   TAIL=`tail -$((${LENGTH} - ${LINUM})) /etc/default/grub`
   CMDLINE='GRUB_CMDLINE_LINUX="resume=/dev/arch/swap cryptdevice='
   CMDLINE+=${UUID}
   CMDLINE+=':crytplvm root=/dev/arch/root"'
   echo "${HEAD}" > prep/grub
   echo "${CMDLINE}" >> prep/grub
   echo "${TAIL}" >> prep/grub
   #+end_src

** crypttab

   #+begin_src sh
   UUID=`blkid /dev/nvme0n1p2 | grep -ow 'UUID="[a-f0-9\-]*"' | sed 's?"??g'`; echo "cryptlvm ${UUID}" > prep/crypttab
   #+end_src

** юзер

** AUR

** Тачпад

** Видеодрайвер

** WM

** rofi

** Терминал

** Секреты

** 

